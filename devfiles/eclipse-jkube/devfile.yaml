apiVersion: 1.0.0
metadata:
  generateName: jkube-
components:
  - type: chePlugin
    id: redhat/java/latest
    memoryLimit: 3Gi
    preferences:
      java.jdt.ls.vmargs: '-javaagent:/lombok.jar'
      java.server.launchMode: Standard
      java.import.gradle.enabled: false
  - id: eamodio/gitlens/latest
    type: chePlugin
    registryUrl: 'https://che-plugin-registry-main.surge.sh/v3'
  - id: github/vscode-pull-request-github/latest
    type: chePlugin
  - id: redhat/vscode-xml/latest
    type: chePlugin
  - id: donjayamanne/githistory/latest
    type: chePlugin
    registryUrl: 'https://che-plugin-registry-main.surge.sh/v3'
  - id: asciidoctor/asciidoctor-vscode/latest
    type: chePlugin
    registryUrl: 'https://che-plugin-registry-main.surge.sh/v3'
  - type: dockerimage
    alias: jkube-dev
    image: 'quay.io/sunix/jkube-dev:jkube-dev'
    env:
      - name: MAVEN_CONFIG
        value: ''
      - name: MAVEN_OPTS
        value: '-XX:MaxRAMPercentage=50 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
          -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom
          -Duser.home=/home/user'
      - name: JAVA_OPTS
        value: '-XX:MaxRAMPercentage=50 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
          -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom'
      - name: JAVA_TOOL_OPTIONS
        value: '-XX:MaxRAMPercentage=50 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
          -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom'
    memoryLimit: 2Gi
    mountSources: true
    volumes:
      - name: m2
        containerPath: /home/user/.m2
      - name: www
        containerPath: /var/www/html
    endpoints:
      - attributes:
          public: 'false'
        name: debug
        port: 8000
  - mountSources: true
    endpoints:
      - name: httpd
        attributes:
          public: 'true'
        port: 8080
    memoryLimit: 64Mi
    type: dockerimage
    image: 'quay.io/centos7/httpd-24-centos7:latest'
    alias: jkube-doc-httpd
    volumes:
      - name: www
        containerPath: /var/www/html
commands:
  - name: build all
    actions:
      - type: exec
        component: jkube-dev
        command: mvn clean install
        workdir: '${CHE_PROJECTS_ROOT}/jkube'
  - name: build current project with all dependent modules
    actions:
      - type: exec
        component: jkube-dev
        command: |
          baseFolder=${workspaceFolder};
          currentProject=${workspaceFolder};
          currentFile=${file};
          for projectPath in $(mvn -q --also-make exec:exec -Dexec.executable="pwd");
          do
            if [ -z "${currentFile##*$projectPath*}" -a -z "${projectPath##*$currentProject*}" ];
            then
              currentProject=$projectPath;
            fi;
          done
          mvn -amd -pl ${currentProject#$baseFolder} clean install -Dmaven.test.skip
        workdir: '${workspaceFolder}'
  - name: doc-build kubernetes-maven-plugin
    actions:
      - type: exec
        component: jkube-dev
        command: mvn clean -Phtml package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
        workdir: '${CHE_PROJECTS_ROOT}/jkube/kubernetes-maven-plugin/doc'
  - name: doc-watch kubernetes-maven-plugin
    actions:
      - type: exec
        component: jkube-dev
        command: mvn clean -Pdoc-watch package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
        workdir: '${CHE_PROJECTS_ROOT}/jkube/kubernetes-maven-plugin/doc'
  - name: doc-build gradle-plugin
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/jkube/gradle-plugin/doc'
        type: exec
        command: mvn clean -Phtml package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
        component: jkube-dev
  - name: doc-watch gradle-plugin
    actions:
      - type: exec
        component: jkube-dev
        command: mvn clean -Pdoc-watch package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
        workdir: '${CHE_PROJECTS_ROOT}/jkube/gradle-plugin/doc'
  - name: doc-build jkube-kit
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/jkube/jkube-kit/doc'
        type: exec
        command: mvn clean -Phtml package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
        component: jkube-dev
  - name: doc-watch jkube-kit
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/jkube/jkube-kit/doc'
        type: exec
        command: mvn clean -Pdoc-watch package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
        component: jkube-dev
  - name: 'run mvnDebug k8s:build quickstart/dockerfile-simple'
    actions:
      - type: exec
        component: jkube-dev
        command: '/usr/share/maven/bin/mvnDebug k8s:build -Djkube.build.strategy=jib
          -Djkube.version=1.6.0-SNAPSHOT'
        workdir: '${CHE_PROJECTS_ROOT}/jkube/quickstarts/maven/docker-file-simple/'
  - name: 'run mvnDebug k8s:build quickstart/docker-file-provided'
    actions:
      - type: exec
        component: jkube-dev
        command: '/usr/share/maven/bin/mvnDebug -Pdocker-file k8s:build -Djkube.build.strategy=jib
          -Djkube.version=1.6.0-SNAPSHOT'
        workdir: '${CHE_PROJECTS_ROOT}/jkube/quickstarts/maven/docker-file-provided/'
  - name: 'run mvnDebug k8s:build quickstart/current (using opened pom.xml file)'
    actions:
      - type: exec
        component: jkube-dev
        command: |
          /usr/share/maven/bin/mvnDebug -f ${file} k8s:build -Djkube.build.strategy=jib -Djkube.version=1.6.0-SNAPSHOT
        workdir: '${workspaceFolder}/quickstarts/maven'
  - name: 'run mvn k8s:build quickstart/current (using opened pom.xml file)'
    actions:
      - type: exec
        component: jkube-dev
        command: |
          mvn -f ${file} k8s:build -Djkube.build.strategy=jib -Djkube.version=1.6.0-SNAPSHOT
        workdir: '${workspaceFolder}/quickstarts/maven'
  - name: connect java debugger mvnDebug
    actions:
      - type: vscode-launch
        referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
            {
              "type": "java",
              "name": "Debug (Attach) - Remote",
              "request": "attach",
              "hostName": "localhost",
              "port": 8000
            }]
          }
projects:
  - name: jkube
    source:
      location: https://github.com/eclipse/jkube
      type: github
